# reticulate::repl_python()
# KoNLPY 라이브러리
from konlpy.tag import Kkma, Hannanum, Komoran, Mecab, Twitter
# 형태소 분석기 생성자
hannanum = Hannanum()
# twitter = Twitter()
# mecab = Mecab()
# kkma = Kkma()
# komoran = Komoran()
# 문장을 형태소로 변환
morph_list = hannanum.morphs('@챗봇 내일 판매율 예측해서 Anderson한테 이메일로 보내줘.')
print(morph_list)
# 품사 POS(Part of Speech) 태그
pos_list = hannanum.pos('@챗봇 내일 판매율 예측해서 Anderson한테 이메일로 보내줘.')
print(pos_list)
# 단어추출
noun_list = hannanum.nouns('철학은 기술을 만들고 기술은 문화를 만든다')
print(noun_list)
library(babynames) # devtools::install_github("hadley/babynames")
babynames
babynames %>% tail
library(tidyverse)
babynames %>% tail
reticulate::repl_python()
repl_python()
reticulate::repl_python()
cheeses = ['Cheddar', 'Edam', 'Gouda']
cheeses.extend(['Mozzarella', 'Roquefort'])
print(cheeses)
cheeses.pop(position)
position = cheeses.index('Mozzarella')
# 치즈 리스트에서 해당 치즈 삭제
cheeses.pop(position)
print(cheeses)
quit
# Create the empty list: baby_names
baby_names = []
# Loop over records
for row in r$babynames:
# Add the name to the list
baby_names.append(row[3])
# Sort the names in alphabetical order
for name in sorted(baby_names):
# Print each name
print(name)
reticulate::repl_python()
reticulate::repl_python()
quit
# Create the empty list: baby_names
baby_names = []
# Create the empty list: baby_names
baby_names = []
reticulate::repl_python()
quit
# Create the empty list: baby_names
baby_names = []
reticulate::repl_python()
quit
# Create the empty list: baby_names
baby_names = []
reticulate::repl_python()
quit
reticulate::repl_python()
print('hll')
baby_names = []
baby_names = []
for row in r$babynames:
quit
for row in r$babynames:
# Add the name to the list
baby_names.append(row[3])
# Sort the names in alphabetical order
for name in sorted(baby_names):
# Print each name
print(name)
reticulate::repl_python()
babynames
babynames
quit
library(tidyverse)
library(babynames) # devtools::install_github("hadley/babynames")
reticulate::repl_python()
r$babynames
library(tuber)
devtools::install_github("soodoku/tuber", build_vignettes = TRUE)
library(tuber) # devtools::install_github("soodoku/tuber", build_vignettes = TRUE)
library(tuber) # devtools::install_github("soodoku/tuber", build_vignettes = TRUE)
devtools::install_github("soodoku/tuber", build_vignettes = TRUE)
library(tuber) # devtools::install_github("soodoku/tuber", build_vignettes = TRUE)
devtools::install_github("soodoku/tuber", build_vignettes = TRUE)
library(tuber) # devtools::install_github("soodoku/tuber", build_vignettes = TRUE)
install.packages("tuber")
library(tuber) # devtools::install_github("soodoku/tuber", build_vignettes = TRUE)
yt_oauth(yt_app_id, yt_app_pw)
yt_oauth(yt_app_id, yt_app_pw)
yt_oauth(yt_app_id, yt_app_pw)
yt_oauth(yt_app_id, yt_app_pw)
yt_oauth(yt_app_id, yt_app_pw)
yt_oauth(yt_app_id, yt_app_pw)
yt_oauth(yt_app_id, yt_app_pw)
yt_oauth(yt_app_id, yt_app_pw)
yt_oauth(yt_app_id, yt_app_pw)
library(tuber) # devtools::install_github("soodoku/tuber", build_vignettes = TRUE)
yt_oauth(yt_app_id, yt_app_pw)
yt_oauth(yt_app_id, yt_app_pw)
setwd("D:/docs/finance")
stock_dat <- kisline_url %>%
read_html() %>%
html_node(xpath = '//*[@id="summarytp1"]/table[1]') %>%
html_table()
library(tidyverse)
library(rvest)
Sys.setlocale("LC_ALL", "C")
kisline_url <- "http://media.kisline.com/highlight/mainHighlight.nice?paper_stock=069080"
stock_dat <- kisline_url %>%
read_html() %>%
html_node(xpath = '//*[@id="summarytp1"]/table[1]') %>%
html_table()
Sys.setlocale("LC_ALL", "Korean")
View(stock_dat)
stock_df <- stock_dat %>%
set_names(stock_dat[1,])
View(stock_df)
stock_df <- stock_dat %>%
set_names(stock_dat[1,]) %>%
filter(row_number() != 1)
names(stock_df)
stock_df <- stock_dat %>%
set_names(stock_dat[1,]) %>%
filter(row_number() != 1) %>%
gather(year, value, -`구분`)
stock_df <- stock_dat %>%
set_names(stock_dat[1,]) %>%
filter(row_number() != 1) %>%
gather(year, value, -`구분`) %>%
mutate(value = parse_number(value))
stock_df %>%
filter(구분 == "PER") %>%
ggplot(aes(x=year, y=value)) +
geom_line()
stock_df %>%
filter(구분 == "PER") %>%
ggplot(aes(x=year, y=value, group=1)) +
geom_line()
filter(str_detect(구분, "매출액")() %>%
stock_df %>%
filter(str_detect(구분, "매출액")) %>%
ggplot(aes(x=year, y=value, group=1)) +
geom_line()
stock_df %>%
filter(str_detect(구분, "매출액")) %>%
ggplot(aes(x=year, y=value, group=1)) +
geom_line()
stock_df %>%
filter(str_detect(구분, "매출액")) %>%
ggplot(aes(x=year, y=value, group=1)) +
geom_line()
library(readxl)
kospi_code <- read_excel("data/유가증권.xlsx", sheet="유가증권")
kospi_code
kospi_df <- kospi_code %>%
mutate(`구분`="코스피")
View(kospi_df)
kosdaq_code <- read_excel("data/코스닥.xlsx", sheet="코스닥")
kosdaq_df <- kosdaq_code %>%
mutate(`구분`="코스닥")
stock_code_df <- bind_rows(kospi_df, kosdaq_df)
stock_code_df %>%
DT::datatable()
stock_code_df %>%
select(`구분`, everything()) %>%
DT::datatable()
stock_code_df %>%
select(`구분`, everything()) %>%
mutate(`홈페이지` = paste0("<a href='", `홈페이지`,"'>", `홈페이지`,"</a>")) %>%
DT::datatable()
stock_code_df %>%
select(`구분`, everything()) %>%
mutate(`홈페이지` = paste0("<a href='", 홈페이지,"'>", 홈페이지,"</a>")) %>%
DT::datatable()
stock_code_df %>%
select(`구분`, everything()) %>%
mutate(`홈페이지` = paste0("<a href='", 홈페이지, "'target='_blank'>", 홈페이지,"</a>")) %>%
DT::datatable()
stock_code_df %>%
select(`구분`, everything()) %>%
mutate(`홈페이지` = paste0("<a href='", 홈페이지, "target='blank'>", 홈페이지,"</a>")) %>%
DT::datatable()
stock_code_df %>%
select(`구분`, everything()) %>%
mutate(`홈페이지` = paste0("<a href='", 홈페이지, "target='blank'>", 홈페이지,"</a>")) %>%
DT::datatable(escape = FALSE)
stock_code_df %>%
select(`구분`, everything()) %>%
mutate(`홈페이지` = paste0("<a href='", 홈페이지, ">", 홈페이지,"</a>")) %>%
DT::datatable(escape = FALSE)
stock_code_df %>%
select(`구분`, everything()) %>%
mutate(`홈페이지` = paste0("<a href='", 홈페이지, "' target='_blank'>", 홈페이지,"</a>")) %>%
DT::datatable(escape = FALSE)
stock_code_df %>%
mutate(상장년 = year(상자일))
library(lubridate)
stock_code_df %>%
mutate(상장년 = year(상자일))
stock_code_df %>%
mutate(상장년 = year(상장일))
stock_code_df %>%
mutate(상장년 = year(상장일)) %>%
count(상장년)
stock_code_df %>%
mutate(`상장년` = year(상장일)) %>%
count(`구분`, `상장년`)
stock_code_df %>%
mutate(`상장년` = year(상장일)) %>%
count(`구분`, `상장년`) %>%
ggplot(aes(x=상장년, y=n)) +
geom_point() +
geom_line()
stock_code_df %>%
mutate(`상장년` = year(상장일)) %>%
count(`구분`, `상장년`) %>%
ggplot(aes(x=상장년, y=n, color=구분)) +
geom_point() +
geom_line()
stock_code_df %>%
mutate(`상장년` = year(상장일)) %>%
count(`구분`, `상장년`) %>%
ggplot(aes(x=상장년, y=n, color=구분)) +
geom_point() +
geom_line() +
theme_minimal(base_family = "NanumGothic")
loadfont()
library(extrafont)
loadfont()
stock_code_df %>%
mutate(`상장년` = year(상장일)) %>%
count(`구분`, `상장년`) %>%
ggplot(aes(x=상장년, y=n, color=구분)) +
geom_point() +
geom_line() +
theme_minimal(base_family = "NanumGothic")
stock_code_df %>%
mutate(`상장년` = year(상장일)) %>%
count(`구분`, `상장년`) %>%
ggplot(aes(x=상장년, y=n, color=구분)) +
geom_point() +
geom_line() +
theme_minimal(base_family = "NanumGothic") +
labs(x="", y="상장업체수", y="연도별 상장업체수") +
theme(legend.position = "none")
stock_code_df %>%
mutate(`상장년` = year(상장일)) %>%
count(`구분`, `상장년`) %>%
ggplot(aes(x=상장년, y=n, color=구분)) +
geom_point() +
geom_line() +
theme_minimal(base_family = "NanumGothic") +
labs(x="", y="상장업체수", title="연도별 상장업체수") +
theme(legend.position = "top")
stock_code_df %>%
select(`구분`, everything()) %>%
mutate(`홈페이지` = paste0("<a href='", `홈페이지`, "' target='_blank'>", `홈페이지`, "</a>")) %>%
DT::datatable(escape = FALSE,  filter = 'top')
stock_code_df %>%
group_by(`결산월`) %>%
summarise(`업체수` = n())
stock_code_df %>%
filter(!str_detect(`결산월`, "12월")) %>%
group_by(`결산월`) %>%
summarise(`업체명` = str_c(`업체명`, collapse=", "))
stock_code_df %>%
filter(!str_detect(`결산월`, "12월")) %>%
group_by(`결산월`) %>%
summarise(`회사명` = str_c(`회사명`, collapse=", "))
stock_code_df %>%
filter(!str_detect(`결산월`, "12월")) %>%
group_by(`결산월`) %>%
summarise(`회사명` = str_c(`회사명`, collapse=", "),
`종목코드` = str_c(`종목코드`, collapse=", "),)
stock_code_df %>%
filter(!str_detect(`결산월`, "12월")) %>%
group_by(`결산월`) %>%
summarise(`회사명` = str_c(`회사명`, collapse=", "),
`종목코드` = str_c(`종목코드`, collapse=", "),) %>%
DT::datatable()
stock_df
stock_df %>%
DT::datatable()
get_company_info <- function(stock_code) {
Sys.setlocale("LC_ALL", "C")
kisline_url <- paste0("http://media.kisline.com/highlight/mainHighlight.nice?paper_stock=", stock_code)
stock_dat <- kisline_url %>%
read_html() %>%
html_node(xpath = '//*[@id="summarytp1"]/table[1]') %>%
html_table()
Sys.setlocale("LC_ALL", "Korean")
stock_df <- stock_dat %>%
set_names(stock_dat[1,]) %>%
filter(row_number() != 1) %>%
gather(year, value, -`구분`) %>%
mutate(value = parse_number(value))
return(stock_df)
}
webzen <- get_company_info(069080)
webzen <- get_company_info("069080")
webzen
stock_code_df %>%
write_rds("data/stock_code_df.rds")
company_df  <- read_rds("data/stock_code_df.rds")
company_df
company_df <- read_rds("data/stock_code_df.rds") %>%
select(회사명, 종목코드)
company_df
company_df %>%
head() %>%
mutate(data = map(`종목코드`, ~get_company_info))
company_df %>%
head() %>%
mutate(data = map(`종목코드`, ~get_company_info(.x)))
company_df %>%
head()
company_df %>%
head() %>%
mutate(data = map(`종목코드`, ~get_company_info(.x)))
company_df %>%
head(1) %>%
mutate(data = map(`종목코드`, ~get_company_info(.x)))
get_company_info <- function(stock_code) {
Sys.setlocale("LC_ALL", "C")
kisline_url <- paste0("http://media.kisline.com/highlight/mainHighlight.nice?paper_stock=", stock_code)
stock_dat <- kisline_url %>%
read_html() %>%
html_node(xpath = '//*[@id="summarytp1"]/table[1]') %>%
html_table() %>%
.[[1]]
Sys.setlocale("LC_ALL", "Korean")
stock_df <- stock_dat %>%
set_names(stock_dat[1,]) %>%
filter(row_number() != 1) %>%
gather(year, value, -`구분`) %>%
mutate(value = parse_number(value))
return(stock_df)
}
# webzen <- get_company_info("069080")
webzen <- get_company_info("069080")
get_company_info <- function(stock_code) {
Sys.setlocale("LC_ALL", "C")
kisline_url <- paste0("http://media.kisline.com/highlight/mainHighlight.nice?paper_stock=", stock_code)
stock_dat <- kisline_url %>%
read_html() %>%
html_node(xpath = '//*[@id="summarytp1"]/table[1]') %>%
html_table()
Sys.setlocale("LC_ALL", "Korean")
stock_df <- stock_dat %>%
set_names(stock_dat[1,]) %>%
filter(row_number() != 1) %>%
gather(year, value, -`구분`) %>%
mutate(value = parse_number(value))
return(stock_df)
}
webzen <- get_company_info("069080")
get_company_info <- possibly(function(stock_code) {
Sys.setlocale("LC_ALL", "C")
kisline_url <- paste0("http://media.kisline.com/highlight/mainHighlight.nice?paper_stock=", stock_code)
stock_dat <- kisline_url %>%
read_html() %>%
html_node(xpath = '//*[@id="summarytp1"]/table[1]') %>%
html_table()
Sys.setlocale("LC_ALL", "Korean")
stock_df <- stock_dat %>%
set_names(stock_dat[1,]) %>%
filter(row_number() != 1) %>%
gather(year, value, -`구분`) %>%
mutate(value = parse_number(value))
return(stock_df)
}, otherwise = NA)
webzen <- get_company_info("069080")
company_df <- read_rds("data/stock_code_df.rds") %>%
select(`회사명`, `종목코드`)
company_df %>%
head(1) %>%
mutate(data = map(`종목코드`, ~get_company_info(.x)))
res_df <- company_df %>%
head(1) %>%
mutate(data = map(`종목코드`, ~get_company_info(.x)))
listviewer::jsonedit(res_df)
res_df <- company_df %>%
head() %>%
mutate(data = map(`종목코드`, ~get_company_info(.x)))
listviewer::jsonedit(res_df)
company_df %>%
head()
View(res_df)
get_company_info("298690")
get_company_info <- possibly(function(stock_code) {
Sys.setlocale("LC_ALL", "C")
kisline_url <- paste0("http://media.kisline.com/highlight/mainHighlight.nice?paper_stock=", stock_code)
stock_dat <- kisline_url %>%
read_html() %>%
html_node(xpath = '//*[@id="summarytp0"]/table[1]') %>%
html_table()
Sys.setlocale("LC_ALL", "Korean")
stock_df <- stock_dat %>%
set_names(stock_dat[1,]) %>%
filter(row_number() != 1) %>%
gather(year, value, -`구분`) %>%
mutate(value = parse_number(value))
return(stock_df)
}, otherwise = NA)
# webzen <- get_company_info("069080")
get_company_info("298690")
res_df <- company_df %>%
head() %>%
mutate(data = map(`종목코드`, ~get_company_info(.x)))
get_company_info("293940")
res_df <- company_df %>%
head() %>%
mutate(data = map_df(`종목코드`, ~get_company_info(.x)))
Sys.setlocale("LC_ALL", "C")
kisline_url <- "http://media.kisline.com/highlight/mainHighlight.nice?paper_stock=069080"
stock_dat <- kisline_url %>%
read_html() %>%
html_node(xpath = '//*[@id="summarytp1"]/table[1]') %>%
html_table()
Sys.setlocale("LC_ALL", "Korean")
stock_dat
stock_dat %>%
set_names(make.names(stock_dat[1,]))
Sys.setlocale("LC_ALL", "C")
kisline_url <- "http://media.kisline.com/highlight/mainHighlight.nice?paper_stock=293940"
stock_dat <- kisline_url %>%
read_html() %>%
html_node(xpath = '//*[@id="summarytp1"]/table[1]') %>%
html_table()
Sys.setlocale("LC_ALL", "Korean")
stock_df <- stock_dat %>%
set_names(make.names(stock_dat[1,])) %>%
filter(row_number() != 1) %>%
gather(year, value, -`구분`) %>%
mutate(value = parse_number(value))
stock_dat %>%
set_names(make.names(stock_dat[1,]))
stock_dat
company_df
company_df <- read_rds("data/stock_code_df.rds")
View(company_df)
company_df %>%
count(업종, sort=TRUE)
company_df <- read_rds("data/stock_code_df.rds") %>%
select(`회사명`, `종목코드`, `업종`)
company_df <- read_rds("data/stock_code_df.rds") %>%
select(`회사명`, `종목코드`, `업종`)
tic()
company_map_df <- company_df %>%
mutate(data = map_df(`종목코드`, ~get_company_info(.x)))
toc()
company_map_df %>%
write_rds("data/company_map_df.rds")
## 회사코드를 넣으면 기업정보를 반환시키는 함수
library(tictoc)
## 회사코드를 넣으면 기업정보를 반환시키는 함수
library(tictoc)
get_company_info <- possibly(function(stock_code) {
Sys.setlocale("LC_ALL", "C")
kisline_url <- paste0("http://media.kisline.com/highlight/mainHighlight.nice?paper_stock=", stock_code)
stock_dat <- kisline_url %>%
read_html() %>%
html_node(xpath = '//*[@id="summarytp0"]/table[1]') %>%
Sys.setlocale("LC_ALL", "Korean")
stock_df <- stock_dat %>%
set_names(stock_dat[1,]) %>%
filter(row_number() != 1) %>%
gather(year, value, -`구분`) %>%
mutate(value = parse_number(value))
return(stock_df)
}, otherwise = NA)
# webzen <- get_company_info("069080")
# get_company_info("293940")
company_df <- read_rds("data/stock_code_df.rds") %>%
select(`회사명`, `종목코드`, `업종`)
tic()
company_map_df <- company_df %>%
mutate(data = map_df(`종목코드`, ~get_company_info(.x)))
toc()
company_map_df %>%
write_rds("data/company_map_df.rds")
get_company_info
get_company_info <- possibly(function(stock_code) {
Sys.setlocale("LC_ALL", "C")
kisline_url <- paste0("http://media.kisline.com/highlight/mainHighlight.nice?paper_stock=", stock_code)
stock_dat <- kisline_url %>%
read_html() %>%
html_node(xpath = '//*[@id="summarytp0"]/table[1]') %>%
Sys.setlocale("LC_ALL", "Korean")
stock_df <- stock_dat %>%
set_names(stock_dat[1,]) %>%
filter(row_number() != 1) %>%
gather(year, value, -`구분`) %>%
mutate(value = parse_number(value))
return(stock_df)
}, otherwise = NA)
# webzen <- get_company_info("069080")
# get_company_info("293940")
company_df <- read_rds("data/stock_code_df.rds") %>%
select(`회사명`, `종목코드`, `업종`)
tic()
company_map_df <- company_df %>%
mutate(data = map_df(`종목코드`, ~get_company_info(.x)))
toc()
company_map_df %>%
write_rds("data/company_map_df.rds")
